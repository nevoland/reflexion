:not(.Flex) > .Flex.Flex-height-fill {
  height: 100%;
}

:not(.Flex) > .Flex.Flex-width-fill {
  width: 100%;
}

.Flex.Flex-vertical > .Flex.Flex-width-fill {
  align-self: stretch;
}

.Flex.Flex-vertical > .Flex.Flex-height-fill {
  flex-grow: 1;
  flex-shrink: 0;
  flex-basis: 0px;
}

.Flex.Flex-vertical > .Flex:not(.Flex-height-fill) {
  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto;
}

.Flex.Flex-horizontal > .Flex.Flex-width-fill {
  flex-grow: 1;
  flex-shrink: 0;
  flex-basis: 0px;
}

.Flex.Flex-horizontal > .Flex.Flex-height-fill {
  align-self: stretch;
}

.Flex.Flex-horizontal > .Flex:not(.Flex-width-fill) {
  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto;
}

.Flex:has(> .Flex.Flex-scroll) {
  overflow: hidden;
}

.Scroller {
  z-index: 5;
  position: absolute;
  left: 0px;
  right: 0px;
  user-select: none;
  cursor: default;
}

.Scroller-top {
  top: 0px;
}

.Scroller-bottom {
  bottom: 0px;
}

.ScrollBar {
  & > .Flex {
    @apply rounded bg-black opacity-40 hover:opacity-60 dark:bg-white;
  }

  &.Flex-vertical {
    @apply min-w-[10px];

    & > .Flex {
      @apply min-w-[2px];

      transition-property: min-width, width;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }

    &:hover {
      & > .Flex {
        @apply min-w-[7px];
      }
    }
  }

  &.Flex-horizontal {
    @apply min-h-[10px];

    & > .Flex {
      @apply min-h-[2px];

      transition-property: min-height, height;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }

    &:hover {
      & > .Flex {
        @apply min-h-[7px];
      }
    }
  }
}
